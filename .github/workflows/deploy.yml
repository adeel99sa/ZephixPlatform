name: Zephix CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
  RAILWAY_PROJECT_ID: '8eded72a-33e6-4c57-9b47-2d33434ef80c'

jobs:
  # Code Quality & Security
  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd zephix-backend && npm ci
          cd ../zephix-frontend && npm ci
          
      - name: TypeScript compilation check
        run: |
          cd zephix-backend && npm run build
          cd ../zephix-frontend && npm run build
          
      - name: ESLint check
        run: |
          cd zephix-backend && npm run lint
          cd ../zephix-frontend && npm run lint
          
      - name: Prettier check
        run: |
          cd zephix-backend && npx prettier --check "src/**/*.ts" "test/**/*.ts"
          cd ../zephix-frontend && npx prettier --check "src/**/*.{ts,tsx}" "src/**/*.css"
          
      - name: Security audit
        run: |
          cd zephix-backend && npm audit --audit-level=moderate
          cd ../zephix-frontend && npm audit --audit-level=moderate

  # Security Scanning
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
          
      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          
      - name: Run Gitleaks secret scanning
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Testing
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: zephix_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd zephix-backend && npm ci
          cd ../zephix-frontend && npm ci
          
      - name: Run backend tests
        run: |
          cd zephix-backend
          npm run test:cov
          npm run test:e2e
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/zephix_test
          NODE_ENV: test
          
      - name: Run frontend tests
        run: |
          cd zephix-frontend
          npm run test:coverage
          npm run cypress:run
        env:
          CI: true

  # Build & Deploy to Staging
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [quality-gates, security-scan, test]
    if: github.ref == 'develop'
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to Railway Staging
        uses: railway/deploy@v1
        with:
          service: zephix-backend
          environment: staging
          
      - name: Deploy Frontend to Railway Staging
        uses: railway/deploy@v1
        with:
          service: zephix-frontend
          environment: staging
          
      - name: Run smoke tests
        run: |
          # Wait for deployment
          sleep 60
          # Run basic health checks
          curl -f ${{ env.RAILWAY_STAGING_URL }}/api/health || exit 1
          curl -f ${{ env.RAILWAY_FRONTEND_STAGING_URL }}/ || exit 1

  # Deploy to Production
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [quality-gates, security-scan, test]
    if: github.ref == 'main'
    timeout-minutes: 30
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Create deployment backup
        run: |
          echo "Creating deployment backup..."
          # Add backup logic here
          
      - name: Deploy Backend to Railway Production
        uses: railway/deploy@v1
        with:
          service: zephix-backend
          environment: production
          
      - name: Deploy Frontend to Railway Production
        uses: railway/deploy@v1
        with:
          service: zephix-frontend
          environment: production
          
      - name: Run production verification
        run: |
          # Wait for deployment
          sleep 90
          # Run comprehensive health checks
          curl -f ${{ env.RAILWAY_PRODUCTION_URL }}/api/health || exit 1
          curl -f ${{ env.RAILWAY_FRONTEND_PRODUCTION_URL }}/ || exit 1
          
      - name: Notify deployment success
        if: success()
        run: |
          echo "Production deployment successful!"
          # Add notification logic here
          
      - name: Rollback on failure
        if: failure()
        run: |
          echo "Deployment failed, initiating rollback..."
          # Add rollback logic here
