#!/bin/bash

# Zephix JWT Security Hardening Script
# This script updates the JWT configuration to use RS256 with enterprise-grade security

echo "🔐 Updating Zephix JWT Security Configuration..."

# Define the new JWT environment variables for RS256
JWT_ALG="RS256"
JWT_EXPIRES_IN="12m"
JWT_REFRESH_EXPIRES_IN="7d"
JWT_ISSUER="zephix-backend"
JWT_AUDIENCE="zephix-frontend"
JWT_REFRESH_AUDIENCE="zephix-refresh"
JWT_KEY_ID="zephix_key_$(date +%s)"

# RS256 Keys (Base64 encoded)
JWT_PRIVATE_KEY="LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRQ3N1M1VTbXJyUWJTVDUKbFRjNHlnbUdXb2xiTFZkd2tCNzdUa0VCcnNSSVpZdHJKSmx1NndIVFFaN25DZUNKQkZJMUJPZHJ4K3hxWWZRYgpkR0NsVDgxMUF4MVB1ZDE5Y1JiQ0pKRVhLY3NTajYyQ0hhSlZBNGdGcnRhdm1HWXZpcFR2VUdCUVY0a2QzeDd5Cit6UEVkb2tHMGs0WHVLbzQyTS9OMUZYVkRxbDNRSWQrOWZDZ1E2S1dCdTBMRTFsSXhGenRwcGsxNStyRUEreC8KQWNrTDcvbnRkeVJ6L1pVMEgrVXJ6YlFUb2lGM2FmaHhzSlVLVzdVQkVrM0YrSkJtNlVkUGNjV2t1SEswTHdlbgptcVhzazJiUFlnUnpCK3N3UUIySFNkY1JYMEhTUno1TnYrYmhicy81MXUxK212YS9hbnpBdEZHY0RnUmx3RWpnCmVWeitlMDhSQWdNQkFBRUNnZ0VBRGZVQnN6U2tkclh6QUdYQnRnbUJOb1YzUnRKRmwvZFZRWW9qcjQ2ZkZwaDUKNlBqbW12TkxUUFltOEZVNGV1bkorTFhDTzAvR3R4dmVIUi9NdFY3YTQ2TVNTY0JqZU1EY0RXamwvbUNtbzRQUAppYzE2TWZOY21OVDFUTy84QmNobFcyYjd1Vkl4WnFRQ1BMRDJrRi9obDVjRHIyQUJCU0hqdktaMUh3ZVZ3dWhtCllWUXd6eVFUeHRUL3VJRzZDem5QYzYreVI5ZDBMWDBJOVVQWEMLMS0tUUMxazR4MlRVejVmazdsaVhiOFk3d2dXL1VFcDgKVlpwR2F6c0oxVHh3SVJxMGxEUTZDOWRJN2N6ZXN0Z0RMTnUvRzQ3aU01ZjN3UTFWRGNHYkxHMjZrai9PYUYxYwpPbFJMMWdXczVwU1ZmaDRsTm9PdUZsbnpaa0pjcVYrMnBrSDV4ZkhBcndLQmdRRGVSNDRZbzBJVXBQQlBsMnFICldndkF0UjBvZlh5ZURzWUVHNkt4Q3pTTk14Z0VKdWNvUllMVTJJWDlVUTNHZGhkY2g1TWcvbnVqUkZnTnNCZngKeUZuQXJhZE5DaXV4K010VWJnZVNtbVdGdDJlam5IeXhuQkVicDlDVTZGSWJQaElRcVoxVnNaSDB5SS9rcVVVUApDRit1Qys4UjhjWXQ3Y2p0VGpPOW9oamVEd0tCZ1FERzc2OTdNOEtMSGpveFlZSmNYV0taZlZpTEJHRDBETUdsCkZENXNBNFh0VnJ0Q0JpSnAwNWEzbVMwQXZJK0JSRW1RRnlRbDA4WitLRHFuMmYwUGdTZERKRmxpU2hHTkN3WTAKTmNpTFhhOXMvOHhqS0ZYK2hnOU1PUUp1ZDd4RDhHSit6TDN1N3NTMmNJTENOLzh2cEQzekNNbm0weXFGaC9sSwpVSGlmYi9BZzN3S0JnUURZRFdzanJZUXNkc21TUTFYcmErM2lpT2huazltTjlFUXFlQVloMmdkaGU1bExaOWpsCmZ2TVZHY1RiSFc2clNkdVpON29kcHQzY0t6RC9WUHRoS3VGNmRCQWF4TmtGNnhNUDVNYjlpNDlFY3FtTkVTenUKb2dqSy9jbXpBMEhUY3ZpeU0zdFhjUHF5bUVPcytZN0RkdHN4WEM0ckhmc0laNGtXaUIyb3BDZFJwd0tCZ1FEQQpmMzRXZ1dkbXBzRTR0MW9sZGxmS25uZm5UVDFqNmxRWElSZWwvV0xDM29Ja3lUclRuR0xqRmQxdU1RZkwxZ0E0CjVhdWN6dWZyZTVJR2lmRk41M1BPaklYUmprcWRhR1dBYitxMnNOam5hRDZtVkltaDJLZEU0b1Z2ejN6bFlONXUKUkVBbHkvV2RkQkdUVGd3b1ZZMThkcXlvSnYybWFJVFpYRFRjVXJ6UmtRS0JnUUNWKzJ6SUtaeHA2WlNWN25LcwpKSFkyeDhac0RGQjBRWHdYQXZXN0YwZEI2dDVyV3U4Z0IvdWpDSW5sdmpUTUFVTm9MdUdNNTdZclc4cmNQM0R2Cm1JSjBSVkVYUDNpYTJteGRpejkyMEJVdkd2SlB3ZUZxOG5la1dFZ0pjNU5GYUxEajNVSnBYS0JBcW45RDNWNjAKVEVFY04vSHlBUUV0RWx6b3ZhZlNnNGdYZkE9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg=="
JWT_PUBLIC_KEY="LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROE1NSUlCQ2dLQ0FRRUFyTHQxRXBxNjBHMGsrWlUzT01vSgpobHFKV3kxWGNKQWUrMDVCQWE3RVNHV0xheVNaYnVzQjAwR2U1d25naVFSU05RVG5hOGZzYW1IMEczUmdwVS9OCmRRTWRUN25kZlhFV3dpU1JGeW5MRW8rdGdoMmlWUU9JQmE3V3I1aG1MNHFVNzFCZ1VGZUpIZDhlOHZzenhIYUoKQnRKT0Y3aXFPTmpQemRSVjFRNnBkMENIZnZYd29FT2lsZ2J0Q3hOWlNNUmM3YWFaTmVmcXhBUHNmd0hKQysvNQo3WGNrYy8yVk5CL2xLODIwRTZJaGQybjRjYkNWQ2x1MUFSSk54ZmlRWnVsSFQzSEZwTGh5dEM4SHA1cWw3Sk5tCnoySUVjd2ZyTUVBZGgwblhFVjlCMGtjK1RiL200VzdQK2RidGZwcjJ2MnA4d0xSUm5BNEVaY0JJNEF1LWxjL250UApFUUlEQVFBQgotLS0tLUVORCBQVUJMSUMgS0VZLS0tLS0K"
JWT_REFRESH_PRIVATE_KEY="LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRQ3dxMEpDcHpITG1hYWkKcFIvMTlLS05PekJIYjRGRWtndFRBNXNMc09BcmlHcEY3VytZZ29VN0FyblhsTjc3MlI3dDhzeGE1UDE2M2o5aQprMGlaakNib1p2OXNLaXBGaDArbzZ0OFliMW9iMVdaQ3ZPZDFDV2NzbHFSL2JWRGRHZGNsYmJzamlvOXNwbHE5CmZRZnd4TURJUmNXZ1l3QVFNS3MvbHNyS1JYYlJWRms3QzlXamVWTGdkT3c1LzNwcFVUYTNrUkxjVGJEZDFxL1kKQUpFV2FtOUpQK2czZE9VcHBwbkFKVlZGZWx4ZUxmbUhGTkx5aWxwTjRsQVBtSllFaXBlcTJCMFRmRDhPQ0t5RQo0RC90aDZpOXVOMVIvd2htdWhaNmlYcWhZNko1dE85SGorNDRVT3liTk1VOFNXQ1JMbXlPakRqdHZiOVhBVEthCiswYmNWNWd0QWdNQkFBRUNnZ0VBQnVUU2s4SHRITmR2Wm9RRnJldFFqSUpLd3FtRWp5WER4Z2JWL2dGMlBlZE0KMDZoaTVSTklHazFqbUczNVpZcDJFb0x1OFNlNUJ4cGZ1WHVySnVnT2ZKM0lTY2c3YmdzaHFLTVc5dC9NSndTUAphNlh1RjVCanM1eGlsRFpkSkJqbUNhZmIyRDh5bERnZTdRQ21yQUVzSktSL0JHQ0RRc2tqWlkvVXlmVW1vSFJzCk5sV0JJako0OGdUa1JyT0F4NFdpeWY3WnQyZStKVllrT21iWkhyODl3aXk2ZzVBSFpuTmNhNTd3eGx0WldMQlgKMUUyUUhEalZQTW4rRW54LzhHaldHazY1WGVhWm9RUG14YlIyWXNMY2s0ZG9ySlRCU0RobEFMMlpodnZjSGVnNApwY3lPR0grc1lHTjBpQSt3a1FTc3J4eFQ1TitqMGh6NHV4SXZLVG5WWVFLQmdRRGI1cWZCYWhXQzlCMUhiYTU3CmExdGw2ZW9lZlJSRVo0N1EzMEJCVGQzVkJVUmVaNEU3SGNNL3hjOFU4U3hXMUhWUU9WRGRLYmd2eDZ3eUFrZ04KaG4vehJHcDN6Q2t0OGRxb0FWZ21HYkd5WXZMUGZwdnZwRkpWVXBxVnFBSjBkdWVYZStVTGp5ZFFEUnBySE8wWQpVZ1JvclFBZG5BbXVGTStBTDA5LzBuZGRxd0tCZ1FETnE4Ym0zNW80cGxvM2htWWkvbUxEd29zV2N0VUgyV3dFCjBzM1hHU0ZmcWJUY3pZL01HY0ovTDJPeFFDTlhGZmNURlNyVGI5VjlnK0xQcCtLVGVzSzQ1aS9oYVg4bzZCc1YKK0tuY1BiQWZXN1dkMStwaWVOUGd6d3dJQk5wVVJpdjhib1JTaWVMcXc0SThJNzR3SnAxTVlNZFZxT2hScndjOApLT2p6aXo2Wmh3Si9EQWFSSmdLbktvSXZGN2puMGRnTko0V2pTQWVQRkM2Vm9OYVVyUDJWSkJFbHJBUDlEVDZUCmJ1bGlhY0xHcWZqMGNXNncvV2RLcTFKQUdId0hkTFhtU1ZFa2dXaW8xOXBpR3MzNEJCMWptbDNPNllvQy9SZi8KYUtzYnlSTm5EdmR4c3RjVHI0NGttRHdmTmJ4Zk92VkJTSGd0aVhEL0ZvWU0wdlhEWXpvZlRRS0JnRVA3MXZoegp5d2VVdlZlRFBubXN1cnJZc0o4UUFDampEcGlka2RyYS9MUWhaWjVpK0hoUHY0SEpDVndLeG1PLzUvYlAxV01rCm9WNG0zUzhrNEhrOVorWTBlSGs3SlFSQmpNcDdjckpSVmNsWHlEWFByRE0ybTFyQk5jbmt5TUo0bTR1S2dJVEQKL1ZUNm9TNzk1WjBHOXBITG43aEo1OWt3VU9UcTVPMjBCbEk3QW9HQWViT3p3WVdpZ1N2VDB4bTZMMTEwdGRlQwpXVXh2TEdxQTkzckdXU2tzQ0daczlNWHpxNmRzQ3E2b0xubHNacm5NcTZFSysxdDBSQ1RMeVIzeWkwdmQ4YTVoCjJaMlYrSEVPVUpoTTUwcXY2UkJSOU9GZTY2ZFZKVXdrTGdBaHJCTXl0VlVWN2wxUEFlVmxEWnVQZ2Z0ejdLY1MKd0MxbHBWb3VKQmZlV3ExZktzST0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo="
JWT_REFRESH_PUBLIC_KEY="LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROE1JSUlCQ2dLQ0FRRUFzS3RDUXFjeHk1bW1vcVVmOWZTaQpqVHN3UjIrQlJKSUxVd09iQzdEZ0s0aHFSZTF2bUlLRk93SzUxNVRlKzlrZTdmTE1XdVQ5ZXQ0L1lwTkltWXdtCjZHYi9iQ29xUllkUHFPcmZHRzlhRzlWbVFyem5kUWxuTEpha2YyMVEzUm5YSlcyN0k0cVBiS1phdlgwSDhNVEEKeUVYRm9HTUFFRENyUDViS3lrVjIwVlJaT3d2Vm8zbFM0SFRzT2Y5NmFWRTJ0NUVTM0UydzNkYXYyQUNSRm1wdgpTVC9vTjNUbEthYVp3Q1ZWUlhwY1hpMzVoeFRTOG9wYVRlSlFENWlXQklxWHF0Z2RFM3cvRGdpc2hPQS83WWVvCnZiamRVZjhJWnJvV2VvbDZvV09pZWJUdlI0L3VPRkRzbXpURlBFbGdrUzVzam93NDdiMi9Wd0V5bXZ0RzNGZVkKTFFJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg=="

# Generate secure legacy secrets for fallback
JWT_SECRET="ZephixJWT2024SecureKey_$(openssl rand -hex 32)"
JWT_REFRESH_SECRET="ZephixJWTRefresh2024SecureKey_$(openssl rand -hex 32)"

# Create a new environment configuration
echo "# JWT Configuration - Enterprise Security with RS256" > /tmp/jwt_config.env
echo "# PRODUCTION: RS256 algorithm for enhanced security (OWASP ASVS Level 1)" >> /tmp/jwt_config.env
echo "JWT_ALG=$JWT_ALG" >> /tmp/jwt_config.env
echo "JWT_EXPIRES_IN=$JWT_EXPIRES_IN" >> /tmp/jwt_config.env
echo "JWT_REFRESH_EXPIRES_IN=$JWT_REFRESH_EXPIRES_IN" >> /tmp/jwt_config.env
echo "JWT_ISSUER=$JWT_ISSUER" >> /tmp/jwt_config.env
echo "JWT_AUDIENCE=$JWT_AUDIENCE" >> /tmp/jwt_config.env
echo "JWT_REFRESH_AUDIENCE=$JWT_REFRESH_AUDIENCE" >> /tmp/jwt_config.env
echo "JWT_KEY_ID=$JWT_KEY_ID" >> /tmp/jwt_config.env
echo "" >> /tmp/jwt_config.env
echo "# RS256 Keys (Base64 encoded)" >> /tmp/jwt_config.env
echo "JWT_PRIVATE_KEY=$JWT_PRIVATE_KEY" >> /tmp/jwt_config.env
echo "JWT_PUBLIC_KEY=$JWT_PUBLIC_KEY" >> /tmp/jwt_config.env
echo "JWT_REFRESH_PRIVATE_KEY=$JWT_REFRESH_PRIVATE_KEY" >> /tmp/jwt_config.env
echo "JWT_REFRESH_PUBLIC_KEY=$JWT_REFRESH_PUBLIC_KEY" >> /tmp/jwt_config.env
echo "" >> /tmp/jwt_config.env
echo "# Legacy HS256 (fallback only - NOT USED with RS256)" >> /tmp/jwt_config.env
echo "JWT_SECRET=$JWT_SECRET" >> /tmp/jwt_config.env
echo "JWT_REFRESH_SECRET=$JWT_REFRESH_SECRET" >> /tmp/jwt_config.env

echo "✅ JWT configuration generated at /tmp/jwt_config.env"
echo ""
echo "📋 Manual Steps Required:"
echo "1. Copy the contents of /tmp/jwt_config.env to your zephix-backend/.env file"
echo "2. Replace the existing JWT configuration section"
echo "3. Restart the backend service"
echo ""
echo "🔐 Security Features Enabled:"
echo "- RS256 algorithm (enterprise-grade asymmetric signing)"
echo "- 12-minute access token expiry (OWASP recommended)"
echo "- Separate keys for access and refresh tokens"
echo "- Key rotation support with unique key IDs"
echo "- Proper issuer/audience validation"
echo ""
echo "📄 Configuration file contents:"
cat /tmp/jwt_config.env

# Clean up temporary keys
rm -f /tmp/jwt_*.pem

echo ""
echo "🧹 Temporary key files cleaned up"
echo "✅ JWT Security Hardening Complete!"

