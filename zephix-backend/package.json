{
  "name": "zephix-backend",
  "version": "1.0.0",
  "description": "Zephix Backend - AI-Powered Project Management Platform",
  "author": "Zephix Team",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "node dist/main.js",
    "start:prod": "node dist/main.js",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "migrate": "ts-node scripts/migrate.ts",
    "backup": "ts-node scripts/backup-database.ts",
    "backup:schedule": "0 2 * * * npm run backup",
    "build:production": "NODE_ENV=production nest build",
    "validate:deployment": "bash scripts/validate-deployment.sh",
    "docker:build": "docker build -t zephix-backend .",
    "docker:run": "docker run -p 3000:3000 --env-file .env.production zephix-backend",
    "docker:test": "npm run docker:build && npm run docker:run",
    "deploy:check": "npm run validate:deployment"
  },
  "dependencies": {
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.0.0",
    "@nestjs/event-emitter": "^2.0.4",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/schedule": "^4.0.0",
    "@nestjs/swagger": "^7.3.0",
    "@nestjs/testing": "^10.0.0",
    "@nestjs/throttler": "^5.1.0",
    "@nestjs/typeorm": "^10.0.1",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/instrumentation-express": "^0.37.0",
    "@opentelemetry/instrumentation-http": "^0.52.0",
    "@opentelemetry/instrumentation-nestjs-core": "^0.37.0",
    "@opentelemetry/resources": "^2.0.1",
    "@opentelemetry/sdk-node": "^0.56.0",
    "@opentelemetry/semantic-conventions": "^1.29.0",
    "@pinecone-database/pinecone": "^2.1.0",
    "@sendgrid/mail": "^8.1.0",
    "bcrypt": "^5.1.1",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.6",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "helmet": "^7.1.0",
    "mammoth": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "nestjs-pino": "^4.0.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pdf-parse": "^1.1.1",
    "pg": "^8.11.3",
    "pino": "^9.0.0",
    "pino-http": "^10.0.0",
    "prom-client": "^15.1.0",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "slugify": "^1.6.6",
    "typeorm": "^0.3.17",
    "uuid": "^11.0.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@types/bcrypt": "^5.0.2",
    "@types/bcryptjs": "^2.4.2",
    "@types/cookie-parser": "^1.4.6",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.0",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.0.0",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/pg": "^8.11.0",
    "@types/supertest": "^6.0.2",
    "@types/uuid": "^10.0.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.0.0",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  }
}
