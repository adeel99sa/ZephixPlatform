import { MigrationInterface, QueryRunner } from "typeorm";

export class CreateAllMissingTables1756309334132 implements MigrationInterface {
    name = 'CreateAllMissingTables1756309334132'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DROP INDEX "public"."IDX_users_reset_token"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_users_verification_token"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_users_email_verified"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ROLE_NAME"`);
        await queryRunner.query(`DROP INDEX "public"."idx_waitlist_email"`);
        await queryRunner.query(`DROP INDEX "public"."idx_waitlist_status"`);
        await queryRunner.query(`DROP INDEX "public"."idx_waitlist_created"`);
        await queryRunner.query(`CREATE TABLE "refresh_tokens" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "token" character varying NOT NULL, "expiresAt" TIMESTAMP NOT NULL, "isRevoked" boolean NOT NULL DEFAULT false, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "userId" uuid, CONSTRAINT "UQ_4542dd2f38a61354a040ba9fd57" UNIQUE ("token"), CONSTRAINT "PK_7d8bee0204106019488c4c50ffa" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."user_organizations_role_enum" AS ENUM('owner', 'admin', 'pm', 'viewer')`);
        await queryRunner.query(`CREATE TABLE "user_organizations" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "userId" uuid NOT NULL, "organizationId" uuid NOT NULL, "role" "public"."user_organizations_role_enum" NOT NULL DEFAULT 'viewer', "isActive" boolean NOT NULL DEFAULT true, "permissions" jsonb NOT NULL DEFAULT '{}', "joinedAt" date, "lastAccessAt" date, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_51ed3f60fdf013ee5041d2d4d3d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_USER_ORG_ROLE" ON "user_organizations" ("role") `);
        await queryRunner.query(`CREATE INDEX "IDX_USER_ORG_ACTIVE" ON "user_organizations" ("isActive") `);
        await queryRunner.query(`CREATE INDEX "IDX_USER_ORG_ORG_ID" ON "user_organizations" ("organizationId") `);
        await queryRunner.query(`CREATE INDEX "IDX_USER_ORG_USER_ID" ON "user_organizations" ("userId") `);
        await queryRunner.query(`CREATE TABLE "team_members" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "team_id" uuid NOT NULL, "user_id" uuid NOT NULL, "role_id" uuid NOT NULL, "organizationId" uuid NOT NULL, "joinedAt" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_ca3eae89dcf20c9fd95bf7460aa" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_TEAM_MEMBER_UNIQUE" ON "team_members" ("team_id", "user_id") `);
        await queryRunner.query(`CREATE TABLE "teams" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying(255) NOT NULL, "description" text, "project_id" uuid NOT NULL, "organizationId" uuid NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "REL_14902fb0ff165d2b8c249b5425" UNIQUE ("project_id"), CONSTRAINT "PK_7e5523774a38b08a6236d322403" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."email_verifications_status_enum" AS ENUM('pending', 'verified', 'expired')`);
        await queryRunner.query(`CREATE TABLE "email_verifications" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "token" character varying NOT NULL, "email" character varying NOT NULL, "userId" uuid NOT NULL, "status" "public"."email_verifications_status_enum" NOT NULL DEFAULT 'pending', "expiresAt" TIMESTAMP NOT NULL, "verifiedAt" TIMESTAMP, "ipAddress" inet, "userAgent" text, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_595be4c36e66b21d3fd14c73a24" UNIQUE ("token"), CONSTRAINT "PK_c1ea2921e767f83cd44c0af203f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_EMAIL_VERIFICATION_EXPIRES" ON "email_verifications" ("expiresAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_EMAIL_VERIFICATION_USER" ON "email_verifications" ("userId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_EMAIL_VERIFICATION_TOKEN" ON "email_verifications" ("token") `);
        await queryRunner.query(`CREATE TYPE "public"."feedback_type_enum" AS ENUM('bug', 'feature_request', 'usability', 'general')`);
        await queryRunner.query(`CREATE TYPE "public"."feedback_status_enum" AS ENUM('new', 'reviewing', 'acknowledged', 'implemented', 'closed')`);
        await queryRunner.query(`CREATE TABLE "feedback" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "type" "public"."feedback_type_enum" NOT NULL DEFAULT 'general', "content" text NOT NULL, "context" text, "status" "public"."feedback_status_enum" NOT NULL DEFAULT 'new', "metadata" json, "user_id" uuid NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_8389f9e087a57689cd5be8b2b13" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_FEEDBACK_STATUS" ON "feedback" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_FEEDBACK_TYPE" ON "feedback" ("type") `);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "lastLoginAt"`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "organizations" ADD "settings" jsonb NOT NULL DEFAULT '{}'`);
        await queryRunner.query(`CREATE TYPE "public"."organizations_status_enum" AS ENUM('active', 'suspended', 'trial')`);
        await queryRunner.query(`ALTER TABLE "organizations" ADD "status" "public"."organizations_status_enum" NOT NULL DEFAULT 'active'`);
        await queryRunner.query(`ALTER TABLE "organizations" ADD "trialEndsAt" date`);
        await queryRunner.query(`ALTER TABLE "organizations" ADD "description" text`);
        await queryRunner.query(`ALTER TABLE "organizations" ADD "website" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "organizations" ADD "industry" character varying(100)`);
        await queryRunner.query(`ALTER TABLE "organizations" ADD "size" character varying(50)`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "users_email_key"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "email"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "email" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email")`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "password"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "password" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "firstName"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "firstName" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "lastName"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "lastName" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "role"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "role" character varying NOT NULL DEFAULT 'user'`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "organizationId"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "organizationId" character varying`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "profilePicture"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "profilePicture" character varying`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "isActive" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "isEmailVerified" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "lastLogin"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "lastLogin" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "resetTokenExpiry"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "resetTokenExpiry" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "createdAt" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "updatedAt" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "organizations" ADD CONSTRAINT "UQ_963693341bd612aa01ddf3a4b68" UNIQUE ("slug")`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "slug" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "createdAt" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "updatedAt" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "roles" DROP COLUMN "name"`);
        await queryRunner.query(`CREATE TYPE "public"."roles_name_enum" AS ENUM('admin', 'editor', 'viewer', 'project_manager', 'developer', 'analyst')`);
        await queryRunner.query(`ALTER TABLE "roles" ADD "name" "public"."roles_name_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "roles" ADD CONSTRAINT "UQ_648e3f5447f725579d7d4ffdfb7" UNIQUE ("name")`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "methodology"`);
        await queryRunner.query(`CREATE TYPE "public"."projects_methodology_enum" AS ENUM('Waterfall', 'Agile', 'Scrum')`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "methodology" "public"."projects_methodology_enum" NOT NULL DEFAULT 'Waterfall'`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "status"`);
        await queryRunner.query(`CREATE TYPE "public"."projects_status_enum" AS ENUM('planning', 'active', 'on-hold', 'completed', 'cancelled')`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "status" "public"."projects_status_enum" NOT NULL DEFAULT 'planning'`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "priority"`);
        await queryRunner.query(`CREATE TYPE "public"."projects_priority_enum" AS ENUM('low', 'medium', 'high', 'critical')`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "priority" "public"."projects_priority_enum" NOT NULL DEFAULT 'medium'`);
        await queryRunner.query(`ALTER TABLE "projects" ALTER COLUMN "organization_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "risk_level"`);
        await queryRunner.query(`CREATE TYPE "public"."projects_risk_level_enum" AS ENUM('low', 'medium', 'high', 'critical')`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "risk_level" "public"."projects_risk_level_enum" NOT NULL DEFAULT 'medium'`);
        await queryRunner.query(`ALTER TABLE "waitlist" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "waitlist" ADD "name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "waitlist" DROP CONSTRAINT "waitlist_email_key"`);
        await queryRunner.query(`ALTER TABLE "waitlist" DROP COLUMN "email"`);
        await queryRunner.query(`ALTER TABLE "waitlist" ADD "email" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "waitlist" ADD CONSTRAINT "UQ_2221cffeeb64bff14201bd5b3de" UNIQUE ("email")`);
        await queryRunner.query(`ALTER TABLE "waitlist" ALTER COLUMN "emailVerified" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "waitlist" DROP COLUMN "company"`);
        await queryRunner.query(`ALTER TABLE "waitlist" ADD "company" character varying`);
        await queryRunner.query(`ALTER TABLE "waitlist" DROP COLUMN "source"`);
        await queryRunner.query(`ALTER TABLE "waitlist" ADD "source" character varying`);
        await queryRunner.query(`ALTER TABLE "waitlist" DROP COLUMN "status"`);
        await queryRunner.query(`ALTER TABLE "waitlist" ADD "status" character varying NOT NULL DEFAULT 'pending'`);
        await queryRunner.query(`ALTER TABLE "waitlist" ALTER COLUMN "createdAt" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "waitlist" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "waitlist" ALTER COLUMN "updatedAt" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "waitlist" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`CREATE INDEX "IDX_ORGANIZATION_STATUS" ON "organizations" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_ORGANIZATION_SLUG" ON "organizations" ("slug") `);
        await queryRunner.query(`CREATE INDEX "IDX_ROLE_NAME" ON "roles" ("name") `);
        await queryRunner.query(`CREATE INDEX "IDX_PROJECT_CREATED_BY" ON "projects" ("created_by_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_PROJECT_MANAGER" ON "projects" ("project_manager_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_PROJECT_PRIORITY" ON "projects" ("priority") `);
        await queryRunner.query(`CREATE INDEX "IDX_PROJECT_STATUS" ON "projects" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_PROJECT_ORGANIZATION" ON "projects" ("organization_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_2221cffeeb64bff14201bd5b3d" ON "waitlist" ("email") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_2221cffeeb64bff14201bd5b3d" ON "waitlist" ("email") `);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" ADD CONSTRAINT "FK_610102b60fea1455310ccd299de" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_organizations" ADD CONSTRAINT "FK_11d4cd5202bd8914464f4bec379" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_organizations" ADD CONSTRAINT "FK_71997faba4726730e91d514138e" FOREIGN KEY ("organizationId") REFERENCES "organizations"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "team_members" ADD CONSTRAINT "FK_fdad7d5768277e60c40e01cdcea" FOREIGN KEY ("team_id") REFERENCES "teams"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "team_members" ADD CONSTRAINT "FK_c2bf4967c8c2a6b845dadfbf3d4" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "team_members" ADD CONSTRAINT "FK_7a4dbecafed7033ca58a453a42e" FOREIGN KEY ("role_id") REFERENCES "roles"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "team_members" ADD CONSTRAINT "FK_32285ad3f2978ced48105e21d2b" FOREIGN KEY ("organizationId") REFERENCES "organizations"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "teams" ADD CONSTRAINT "FK_858389ddeb0bd6c6bf4e323f91e" FOREIGN KEY ("organizationId") REFERENCES "organizations"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "teams" ADD CONSTRAINT "FK_14902fb0ff165d2b8c249b54252" FOREIGN KEY ("project_id") REFERENCES "projects"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "projects" ADD CONSTRAINT "FK_c24760a4c22a838d6a8eb1fdc3a" FOREIGN KEY ("created_by_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "projects" ADD CONSTRAINT "FK_585c8ce06628c70b70100bfb842" FOREIGN KEY ("organization_id") REFERENCES "organizations"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "email_verifications" ADD CONSTRAINT "FK_4e63a91e0a684b31496bd50733e" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "feedback" ADD CONSTRAINT "FK_121c67d42dd543cca0809f59901" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "feedback" DROP CONSTRAINT "FK_121c67d42dd543cca0809f59901"`);
        await queryRunner.query(`ALTER TABLE "email_verifications" DROP CONSTRAINT "FK_4e63a91e0a684b31496bd50733e"`);
        await queryRunner.query(`ALTER TABLE "projects" DROP CONSTRAINT "FK_585c8ce06628c70b70100bfb842"`);
        await queryRunner.query(`ALTER TABLE "projects" DROP CONSTRAINT "FK_c24760a4c22a838d6a8eb1fdc3a"`);
        await queryRunner.query(`ALTER TABLE "teams" DROP CONSTRAINT "FK_14902fb0ff165d2b8c249b54252"`);
        await queryRunner.query(`ALTER TABLE "teams" DROP CONSTRAINT "FK_858389ddeb0bd6c6bf4e323f91e"`);
        await queryRunner.query(`ALTER TABLE "team_members" DROP CONSTRAINT "FK_32285ad3f2978ced48105e21d2b"`);
        await queryRunner.query(`ALTER TABLE "team_members" DROP CONSTRAINT "FK_7a4dbecafed7033ca58a453a42e"`);
        await queryRunner.query(`ALTER TABLE "team_members" DROP CONSTRAINT "FK_c2bf4967c8c2a6b845dadfbf3d4"`);
        await queryRunner.query(`ALTER TABLE "team_members" DROP CONSTRAINT "FK_fdad7d5768277e60c40e01cdcea"`);
        await queryRunner.query(`ALTER TABLE "user_organizations" DROP CONSTRAINT "FK_71997faba4726730e91d514138e"`);
        await queryRunner.query(`ALTER TABLE "user_organizations" DROP CONSTRAINT "FK_11d4cd5202bd8914464f4bec379"`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" DROP CONSTRAINT "FK_610102b60fea1455310ccd299de"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2221cffeeb64bff14201bd5b3d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2221cffeeb64bff14201bd5b3d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_PROJECT_ORGANIZATION"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_PROJECT_STATUS"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_PROJECT_PRIORITY"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_PROJECT_MANAGER"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_PROJECT_CREATED_BY"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ROLE_NAME"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ORGANIZATION_SLUG"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ORGANIZATION_STATUS"`);
        await queryRunner.query(`ALTER TABLE "waitlist" ALTER COLUMN "updatedAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "waitlist" ALTER COLUMN "updatedAt" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "waitlist" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "waitlist" ALTER COLUMN "createdAt" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "waitlist" DROP COLUMN "status"`);
        await queryRunner.query(`ALTER TABLE "waitlist" ADD "status" character varying(50) DEFAULT 'pending'`);
        await queryRunner.query(`ALTER TABLE "waitlist" DROP COLUMN "source"`);
        await queryRunner.query(`ALTER TABLE "waitlist" ADD "source" character varying(100)`);
        await queryRunner.query(`ALTER TABLE "waitlist" DROP COLUMN "company"`);
        await queryRunner.query(`ALTER TABLE "waitlist" ADD "company" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "waitlist" ALTER COLUMN "emailVerified" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "waitlist" DROP CONSTRAINT "UQ_2221cffeeb64bff14201bd5b3de"`);
        await queryRunner.query(`ALTER TABLE "waitlist" DROP COLUMN "email"`);
        await queryRunner.query(`ALTER TABLE "waitlist" ADD "email" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "waitlist" ADD CONSTRAINT "waitlist_email_key" UNIQUE ("email")`);
        await queryRunner.query(`ALTER TABLE "waitlist" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "waitlist" ADD "name" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "risk_level"`);
        await queryRunner.query(`DROP TYPE "public"."projects_risk_level_enum"`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "risk_level" character varying(20) DEFAULT 'medium'`);
        await queryRunner.query(`ALTER TABLE "projects" ALTER COLUMN "organization_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "priority"`);
        await queryRunner.query(`DROP TYPE "public"."projects_priority_enum"`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "priority" character varying(20) DEFAULT 'medium'`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."projects_status_enum"`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "status" character varying(20) DEFAULT 'planning'`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "methodology"`);
        await queryRunner.query(`DROP TYPE "public"."projects_methodology_enum"`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "methodology" character varying(20) DEFAULT 'Waterfall'`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "name" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "roles" DROP CONSTRAINT "UQ_648e3f5447f725579d7d4ffdfb7"`);
        await queryRunner.query(`ALTER TABLE "roles" DROP COLUMN "name"`);
        await queryRunner.query(`DROP TYPE "public"."roles_name_enum"`);
        await queryRunner.query(`ALTER TABLE "roles" ADD "name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "updatedAt" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "createdAt" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "slug" SET DEFAULT ('org-'|| gen_random_uuid())`);
        await queryRunner.query(`ALTER TABLE "organizations" DROP CONSTRAINT "UQ_963693341bd612aa01ddf3a4b68"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "updatedAt" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "createdAt" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "resetTokenExpiry"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "resetTokenExpiry" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "lastLogin"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "lastLogin" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "isEmailVerified" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "isActive" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "profilePicture"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "profilePicture" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "organizationId"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "organizationId" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "role"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "role" character varying(50) DEFAULT 'user'`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "lastName"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "lastName" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "firstName"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "firstName" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "password"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "password" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "email"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "email" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "users_email_key" UNIQUE ("email")`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "projects" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "organizations" DROP COLUMN "size"`);
        await queryRunner.query(`ALTER TABLE "organizations" DROP COLUMN "industry"`);
        await queryRunner.query(`ALTER TABLE "organizations" DROP COLUMN "website"`);
        await queryRunner.query(`ALTER TABLE "organizations" DROP COLUMN "description"`);
        await queryRunner.query(`ALTER TABLE "organizations" DROP COLUMN "trialEndsAt"`);
        await queryRunner.query(`ALTER TABLE "organizations" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."organizations_status_enum"`);
        await queryRunner.query(`ALTER TABLE "organizations" DROP COLUMN "settings"`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "updated_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "projects" ADD "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "users" ADD "lastLoginAt" TIMESTAMP`);
        await queryRunner.query(`DROP INDEX "public"."IDX_FEEDBACK_TYPE"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_FEEDBACK_STATUS"`);
        await queryRunner.query(`DROP TABLE "feedback"`);
        await queryRunner.query(`DROP TYPE "public"."feedback_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."feedback_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_EMAIL_VERIFICATION_TOKEN"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_EMAIL_VERIFICATION_USER"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_EMAIL_VERIFICATION_EXPIRES"`);
        await queryRunner.query(`DROP TABLE "email_verifications"`);
        await queryRunner.query(`DROP TYPE "public"."email_verifications_status_enum"`);
        await queryRunner.query(`DROP TABLE "teams"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_TEAM_MEMBER_UNIQUE"`);
        await queryRunner.query(`DROP TABLE "team_members"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_USER_ORG_USER_ID"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_USER_ORG_ORG_ID"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_USER_ORG_ACTIVE"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_USER_ORG_ROLE"`);
        await queryRunner.query(`DROP TABLE "user_organizations"`);
        await queryRunner.query(`DROP TYPE "public"."user_organizations_role_enum"`);
        await queryRunner.query(`DROP TABLE "refresh_tokens"`);
        await queryRunner.query(`CREATE INDEX "idx_waitlist_created" ON "waitlist" ("createdAt") `);
        await queryRunner.query(`CREATE INDEX "idx_waitlist_status" ON "waitlist" ("status") `);
        await queryRunner.query(`CREATE INDEX "idx_waitlist_email" ON "waitlist" ("email") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_ROLE_NAME" ON "roles" ("name") `);
        await queryRunner.query(`CREATE INDEX "IDX_users_email_verified" ON "users" ("emailVerified") `);
        await queryRunner.query(`CREATE INDEX "IDX_users_verification_token" ON "users" ("verificationToken") `);
        await queryRunner.query(`CREATE INDEX "IDX_users_reset_token" ON "users" ("resetToken") `);
    }

}
