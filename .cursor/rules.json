{
  "projectName": "Zephix",
  "description": "Enterprise Project Management Co-pilot",
  "rules": [
    "Follow strict TypeScript standards - no 'any' types allowed",
    "Use NestJS dependency injection patterns for all services",
    "Generate comprehensive JSDoc for all public methods and classes",
    "Follow Railway deployment best practices - IPv4 networking, optimized connection pools",
    "Implement proper error handling with custom exceptions",
    "Use camelCase for variables/functions, PascalCase for classes/interfaces",
    "File names must use kebab-case (user-auth.service.ts)",
    "All API endpoints must have proper validation using DTOs and class-validator",
    "Generate corresponding unit tests for all services and controllers",
    "Follow security-first approach - all endpoints protected by default",
    "Use TypeORM with explicit relationships and proper migrations",
    "React components must be functional with TypeScript interfaces for props"
  ],
  "codeReview": {
    "enforceArchitecture": "microservices",
    "requireTests": true,
    "securityScan": true,
    "performanceCheck": true,
    "documentationRequired": true
  },
  "frameworks": {
    "backend": "NestJS",
    "frontend": "React",
    "database": "PostgreSQL with TypeORM",
    "deployment": "Railway",
    "language": "TypeScript"
  },
  "qualityGates": {
    "testCoverage": "minimum 80%",
    "typeScriptStrict": true,
    "eslintCompliance": true,
    "prettierFormatting": true
  }
}